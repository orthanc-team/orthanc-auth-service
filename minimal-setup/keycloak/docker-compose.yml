# SPDX-FileCopyrightText: 2022 - 2025 Orthanc Team SRL <info@orthanc.team>
#
# SPDX-License-Identifier: CC0-1.0

version: "3"
services:

  nginx:
    image: orthancteam/orthanc-nginx:25.9.0
    depends_on: [orthanc, orthanc-auth-service, keycloak]
    restart: unless-stopped
    ports: ["80:80"]
# if setting ENABLE_HTTPS: "true" env var, uncomment the following 4 lines and comment the line with 'ports: ["80:80"]'
#    ports: ["443:443"]
#    volumes:
#      - /.../crt.pem:/etc/nginx/tls/crt.pem
#      - /.../key.pem:/etc/nginx/tls/key.pem
# if using orthancteam/orthanc-nginx-certbot image, map the volume
#    volumes:
#      - tls:/etc/letsencrypt
    environment:
      ENABLE_ORTHANC: "true"
      ENABLE_KEYCLOAK: "true"
      ENABLE_ORTHANC_TOKEN_SERVICE: "false"
      ENABLE_HTTPS: "false"
# to use OHIF-plugin: you don't need the OHIF reverse proxy
      ENABLE_OHIF: "true"

  orthanc:
    image: orthancteam/orthanc:25.10.5
    volumes:
      - orthanc-storage:/var/lib/orthanc/db
    depends_on: [orthanc-db]
    restart: unless-stopped
    environment:
      STONE_WEB_VIEWER_PLUGIN_ENABLED: "true"
      DICOM_WEB_PLUGIN_ENABLED: "true"
      STL_PLUGIN_ENABLED: "true"
      # to use OHIF-plugin:  make sure to have a "OHIF" config and use "dicom-web" source
#      OHIF_PLUGIN_ENABLED: "true"
      ORTHANC__POSTGRESQL__HOST: "orthanc-db"
      ORTHANC__POSTGRESQL__TRANSACTION_MODE: "ReadCommitted"
      VERBOSE_ENABLED: "true"
      VERBOSE_STARTUP: "true"
      ORTHANC_JSON: |
        {
          "Name": "Orthanc",
          "OrthancExplorer2": {
            "IsDefaultUI": true,
            "UiOptions": {
              "EnableShares": true,
              "DefaultShareDuration": 0,
              "ShareDurations": [0, 7, 15, 30, 90, 365],
              "EnableOpenInOhifViewer3": true,
              // to use OHIF-plugin:  use http://localhost/orthanc/ohif/
              //"OhifViewer3PublicRoot": "http://localhost/orthanc/ohif/"
              "OhifViewer3PublicRoot": "http://localhost/ohif/",
              "CustomButtons": {
                "study": [
                  {
                    "HttpMethod": "GET",
                    "Id": "get-jpeg-archive",
                    "Tooltip": "Get JPG Archive",
                    "Target": "_self",
                    "Icon": "bi bi-filetype-jpg",
                    "Url": "../../studies/{UUID}/download-as-jpeg-archive?token={study-resource-token/download-instant-link}&preview-level=instance" 
                  }
                ]
              }
            },
            "Tokens" : {
              "InstantLinksValidity": 3600,
              "ShareType": "ohif-viewer-publication",
              "LandingOptions" : [
                {
                  "Type" : "open-viewer-button"
                },
                {
                  "Type" : "download-study"
                },
                {
                  "Type": "custom",
                  "Id": "get-jpeg-archive",
                  "Icon": "bi bi-filetype-jpg",
                  "Title": "Download study as jpeg Archive",
                  "Url": "../../studies/{UUID}/download-as-jpeg-archive?preview-level=instance&filename={StudyInstanceUID}.zip"
                }
              ]
            },
            "Keycloak" : {
              "Enable": true,
              "Url": "http://localhost/keycloak/",
              "Realm": "orthanc",
              "ClientId": "orthanc"
            }
          },
          "AuthenticationEnabled": false,     // because it is handled by the authorization plugin
          "Authorization": {
            "WebServiceRootUrl": "http://orthanc-auth-service:8000/",
            "WebServiceUsername": "share-user",
            "WebServicePassword": "change-me",
            // to use OHIF-plugin:  make sure to include "ohif" in the list
            "StandardConfigurations" : [
              "osimis-web-viewer",
              "stone-webviewer",
              "orthanc-explorer-2",
              "ohif",
              "stl"
            ],
            "TokenHttpHeaders" : [ "api-key" ],
            "CheckedLevel": "studies"
          },
          "DicomWeb": {
            "Enable": true,
            "PublicRoot": "/orthanc/dicom-web/"
          }
        }

  orthanc-auth-service:
    image: orthancteam/orthanc-auth-service:25.9.0
    # always disable this port mapping in production !!!
    # ports: ["8000:8000"]
    # permissions can be customized in the permissions.json file
    volumes:
      - ./permissions.jsonc:/orthanc_auth_service/permissions.json
    depends_on: [keycloak]
    restart: unless-stopped
    environment:
      SECRET_KEY: "change-me-I-am-a-secret-key"
      ENABLE_KEYCLOAK: "true"
#      ENABLE_KEYCLOAK_API_KEYS: "true"
#      # to enable the permissions edition UI in OE2, you need to provide a KEYCLOAK_CLIENT_SECRET
#      KEYCLOAK_CLIENT_SECRET: "change-me-I-am-a-secret-you-get-in-keycloak-logs"
      KEYCLOAK_CLIENT_SECRET: "5KYfmCll8quvQtlZtUO2vXdsDjA8fR0O"
      PUBLIC_ORTHANC_ROOT: "http://localhost/orthanc/"
      PUBLIC_LANDING_ROOT: "http://localhost/orthanc/ui/app/token-landing.html"
      # to use OHIF-plugin:  make sure to use http://localhost/orthanc/ohif/
      PUBLIC_OHIF_ROOT: "http://localhost/ohif/"
#      PUBLIC_OHIF_ROOT: "http://localhost/orthanc/ohif/"
      USERS: |
        {
          "share-user": "change-me"
        }

  orthanc-db:
    image: postgres:14
    restart: unless-stopped
    # always disable this port mapping in production !!!
    # ports: ["5432:5432"]
    volumes: ["orthanc-db:/var/lib/postgresql/data"]
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"

# to use OHIF-plugin: you don't need this container
  ohif:
    image: orthancteam/ohif-v3:25.9.0
#  uncomment if you want to customize ohif configuration
#    volumes:
#      - ./ohif-app-config.js:/usr/share/nginx/html/app-config.js
    restart: unless-stopped


  keycloak:
    image: orthancteam/orthanc-keycloak:25.9.0
    depends_on: [keycloak-db]
    restart: unless-stopped
    environment:
      #KEYCLOAK_ADMIN: "admin"
      #KEYCLOAK_ADMIN_PASSWORD: "change-me"
      KC_BOOTSTRAP_ADMIN_USERNAME: "admin"
      KC_BOOTSTRAP_ADMIN_PASSWORD: "change-me"
      KC_DB: "postgres"
      KC_DB_URL: "jdbc:postgresql://keycloak-db:5432/keycloak"
      KC_DB_USERNAME: "keycloak"
      KC_DB_PASSWORD: "keycloak"
      # KC_HOSTNAME: "https://mydomain.com/keycloak"
    # volumes:
    #   - /home/bc/tmp:/usr/tmp

  keycloak-db:
    image: postgres:14
    restart: unless-stopped
    volumes: ["keycloak-db:/var/lib/postgresql/data"]
    environment:
      POSTGRES_PASSWORD: "keycloak"
      POSTGRES_USER: "keycloak"
      POSTGRES_DB: "keycloak"

volumes:
  orthanc-storage:
  orthanc-db:
  keycloak-db:
  # tls: